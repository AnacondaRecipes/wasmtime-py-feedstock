From 8e40f05eec3321ecb4b8cc22c1a590edac8d8113 Mon Sep 17 00:00:00 2001
From: Udo-Peter Steyer <ous8292@gmail.com>
Date: Wed, 29 Jan 2025 15:12:46 -0600
Subject: [PATCH] read library

---
 wasmtime/_ffi.py | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/wasmtime/_ffi.py b/wasmtime/_ffi.py
index a3129d8..bcc7db2 100644
--- a/wasmtime/_ffi.py
+++ b/wasmtime/_ffi.py
@@ -9,11 +9,11 @@ if sys.maxsize <= 2**32:
     raise RuntimeError("wasmtime only works on 64-bit platforms right now")
 
 if sys.platform == 'linux':
-    libname = '_libwasmtime.so'
+    libname = 'libwasmtime.so'
 elif sys.platform == 'win32':
-    libname = '_wasmtime.dll'
+    libname = 'wasmtime.dll'
 elif sys.platform == 'darwin':
-    libname = '_libwasmtime.dylib'
+    libname = 'libwasmtime.dylib'
 else:
     raise RuntimeError("unsupported platform `{}` for wasmtime".format(sys.platform))
 
@@ -25,10 +25,8 @@ if machine == 'arm64':
 if machine != 'x86_64' and machine != 'aarch64':
     raise RuntimeError("unsupported architecture for wasmtime: {}".format(machine))
 
-filename = Path(__file__).parent / (sys.platform + '-' + machine) / libname
-if not filename.exists():
-    raise RuntimeError("precompiled wasmtime binary not found at `{}`".format(filename))
-dll = cdll.LoadLibrary(str(filename))
+
+dll = cdll.LoadLibrary(libname)
 
 WASM_I32 = c_uint8(0)
 WASM_I64 = c_uint8(1)
-- 
2.39.5 (Apple Git-154)

